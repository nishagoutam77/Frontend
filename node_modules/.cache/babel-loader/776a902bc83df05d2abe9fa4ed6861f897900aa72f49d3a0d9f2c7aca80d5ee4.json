{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\LoginComponent\\\\login.js\",\n  _s = $RefreshSig$();\nimport './login.css';\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [output, setOutput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Validate form fields\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    return newErrors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors({});\n    setOutput('');\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:5000/api/login', formData); // Adjust API URL if needed\n      setOutput('Login successful!');\n      setLoading(false);\n      setFormData({\n        email: '',\n        password: ''\n      });\n\n      // You can handle login success (e.g., saving token to localStorage, redirecting)\n      // localStorage.setItem('token', response.data.token);\n    } catch (error) {\n      setLoading(false);\n      setOutput('Login failed. Please check your credentials.');\n      setFormData({\n        email: '',\n        password: ''\n      });\n      console.error(error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-message error\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ErrorMessage\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error\",\n        className: \"ErrorMessage\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        disabled: loading,\n        children: loading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"Egmo1+qvhjEYvFDQfYBOF3olzzs=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//   const [loginError, setLoginError] = useState('');\n\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: '',\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string()\n//         .email('Invalid email address')\n//         .required('Email is required'),\n//       password: Yup.string()\n//         .min(6, 'Password must be at least 6 characters long')\n//         .required('Password is required'),\n//     }),\n//     onSubmit: async (values) => {\n//       try {\n//         const response = await axios.post('http://localhost:5000/api/login', values);\n//         alert('Login successful');\n//         // Handle success (store token, redirect, etc.)\n//       } catch (error) {\n//         setLoginError('Invalid email or password');\n//       }\n//     },\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\n//         <h1 className=\"form-heading\">Login</h1>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         {formik.errors.email && formik.touched.email ? (\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\n//           ) : null}\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.password}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         {formik.errors.password && formik.touched.password ? (\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\n//           ) : null}\n\n//      <div className=\"row\">\n//       <div className=\"col-12\">\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\n//       </div>\n//     </div>\n\n//     {loginError && (\n//       <div className=\"row mt-3\">\n//         <div className=\"col-12\">\n//           <div className=\"output-message\">{loginError}</div>\n//         </div>\n//       </div>\n//     )}\n\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","email","password","errors","setErrors","output","setOutput","loading","setLoading","handleChange","e","name","value","target","prevData","validateForm","newErrors","emailRegex","test","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","post","error","console","data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["import './login.css';\r\nimport './login.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [output, setOutput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Validate form fields\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    setOutput('');\r\n    \r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('http://localhost:5000/api/login', formData); // Adjust API URL if needed\r\n      setOutput('Login successful!');\r\n      setLoading(false);\r\n      setFormData({\r\n        email: '',\r\n        password: ''\r\n      });\r\n      \r\n      // You can handle login success (e.g., saving token to localStorage, redirecting)\r\n      // localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setOutput('Login failed. Please check your credentials.');\r\n      setFormData({\r\n        email: '',\r\n        password: ''\r\n      });\r\n      console.error(error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit} className=\"form-card\">\r\n        <h2 className=\"form-heading\">Login</h2>\r\n        \r\n        {output && <div className=\"output-message error\">{output}</div>}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n        {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n        <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useFormik } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//   const [loginError, setLoginError] = useState('');\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       email: '',\r\n//       password: '',\r\n//     },\r\n//     validationSchema: Yup.object({\r\n//       email: Yup.string()\r\n//         .email('Invalid email address')\r\n//         .required('Email is required'),\r\n//       password: Yup.string()\r\n//         .min(6, 'Password must be at least 6 characters long')\r\n//         .required('Password is required'),\r\n//     }),\r\n//     onSubmit: async (values) => {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:5000/api/login', values);\r\n//         alert('Login successful');\r\n//         // Handle success (store token, redirect, etc.)\r\n//       } catch (error) {\r\n//         setLoginError('Invalid email or password');\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\r\n//         <h1 className=\"form-heading\">Login</h1>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.email}\r\n//             placeholder=\"Enter your email\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.email && formik.touched.email ? (\r\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\r\n//           ) : null}\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.password}\r\n//             placeholder=\"Enter your password\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.password && formik.touched.password ? (\r\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\r\n//           ) : null}\r\n\r\n\r\n//      <div className=\"row\">\r\n//       <div className=\"col-12\">\r\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n//       </div>\r\n//     </div>\r\n\r\n//     {loginError && (\r\n//       <div className=\"row mt-3\">\r\n//         <div className=\"col-12\">\r\n//           <div className=\"output-message\">{loginError}</div>\r\n//         </div>\r\n//       </div>\r\n//     )}\r\n\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}