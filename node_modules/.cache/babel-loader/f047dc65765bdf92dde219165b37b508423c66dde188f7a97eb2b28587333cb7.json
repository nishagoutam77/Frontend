{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\LoginComponent\\\\login.js\",\n  _s = $RefreshSig$();\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [output, setOutput] = useState('');\n\n  // Handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validate form fields\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    return newErrors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n      setOutput('Login successful!');\n      setFormData({\n        email: '',\n        password: ''\n      });\n      console.log(response.data);\n    } catch (error) {\n      setOutput('Login failed!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://knowledgemission.kerala.gov.in/img/official-login.jpg\",\n          className: \"img-fluid\",\n          alt: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"form-heading\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              placeholder: \"Enter your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ErrorMessage\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              placeholder: \"Enter your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"error\",\n            className: \"ErrorMessage\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Forget Password   \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary submit-btn\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary submit-btn\",\n                children: \" Sing In With Google \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"output-message\",\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"i4+DR9BXyEHMvkyA5OlY22NUjeA=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import './login.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import {\n//   MDBContainer,\n//   MDBCol,\n//   MDBRow,\n//   MDBBtn,\n//   MDBIcon,\n//   MDBInput,\n//   MDBCheckbox\n// } from 'mdb-react-ui-kit';\n\n// const LoginForm = () => {\n//   const [formData, setFormData] = useState({ email: '', password: '' });\n//   const [errors, setErrors] = useState({});\n//   const [output, setOutput] = useState('');\n\n//   // Handle input change\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Validate form fields\n//   const validateForm = () => {\n//     const newErrors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n//     if (!formData.email) {\n//       newErrors.email = 'Email is required';\n//     } else if (!emailRegex.test(formData.email)) {\n//       newErrors.email = 'Invalid email format';\n//     }\n\n//     if (!formData.password) {\n//       newErrors.password = 'Password is required';\n//     }\n\n//     return newErrors;\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n//       setOutput('Login successful!');\n//       setFormData({\n//         email: '',\n//         password: ''\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       setOutput('Login failed!');\n//     }\n//   };\n\n//   return (\n//      <MDBContainer fluid className=\"p-3 my-5\">\n//       <MDBRow>\n//         <MDBCol col='10' md='6'>\n//           <img\n//             src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\"\n//             className=\"img-fluid\"\n//             alt=\"Phone\"\n//           />\n//         </MDBCol>\n\n//         <MDBCol col='4' md='6'>\n//           <form onSubmit={handleSubmit} className=\"form-container-inline\">\n//             <h2 className=\"form-heading\">Login</h2>\n\n//             {/* Email Field */}\n//             <div className=\"form-group-inline\">\n//               <label htmlFor=\"email\" className=\"form-label-inline\">Email:</label>\n//               <MDBInput\n//                 wrapperClass='mb-4'\n//                 id='formControlLg'\n//                 type='email'\n//                 size=\"lg\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 className={errors.email ? 'is-invalid' : ''}\n//               />\n//             </div>\n//             {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\n\n//             {/* Password Field */}\n//             <div className=\"form-group-inline\">\n//               <label htmlFor=\"password\" className=\"form-label-inline\">Password:</label>\n//               <MDBInput\n//                 wrapperClass='mb-4'\n//                 id='formControlLg'\n//                 type='password'\n//                 size=\"lg\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//                 className={errors.password ? 'is-invalid' : ''}\n//               />\n//             </div>\n//             {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\n\n//             <div className=\"d-flex justify-content-between mx-4 mb-4\">\n//               <MDBCheckbox name='flexCheck' value='' id='flexCheckDefault' label='Remember me' />\n//               <a href=\"#!\">Forgot password?</a>\n//             </div>\n\n//             <MDBBtn type=\"submit\" className=\"mb-4 w-100\" size=\"lg\">Sign in</MDBBtn>\n\n//             <div className=\"divider d-flex align-items-center my-4\">\n//               <p className=\"text-center fw-bold mx-3 mb-0\">OR</p>\n//             </div>\n\n//             {/* Social Buttons */}\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#3b5998' }}>\n//               <MDBIcon fab icon=\"facebook-f\" className=\"mx-2\" />\n//               Continue with Facebook\n//             </MDBBtn>\n\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#55acee' }}>\n//               <MDBIcon fab icon=\"twitter\" className=\"mx-2\" />\n//               Continue with Twitter\n//             </MDBBtn>\n\n//             {/* Output Message */}\n//             {output && (\n//               <div className=\"output-message\">{output}</div>\n//             )}\n//           </form>\n//         </MDBCol>\n//       </MDBRow>\n//     </MDBContainer>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","formData","setFormData","email","password","errors","setErrors","output","setOutput","handleChange","e","name","value","target","validateForm","newErrors","emailRegex","test","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","post","console","log","data","error","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","href","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["import './login.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [formData, setFormData] = useState({ email: '', password: '' });\r\n    const [errors, setErrors] = useState({});\r\n    const [output, setOutput] = useState('');\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n  // Validate form fields\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validateForm();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n            setOutput('Login successful!');\r\n            setFormData({\r\n                email: '',\r\n                password: ''\r\n              });\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            setOutput('Login failed!');\r\n        }\r\n    };\r\n\r\n  return (\r\n    <>  \r\n<div className=\"main_div \" > \r\n\r\n<div className=\"form-group col-12\"> \r\n\r\n<img      src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\r\n            className=\"img-fluid\"\r\n            alt=\"Phone\"   /> \r\n\r\n</div>\r\n\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit} className=\"form-card\">\r\n        <h2 className=\"form-heading\">Login</h2>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n        {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n        <div className=\"row\">\r\n\r\n        <div className=\"col-12\">\r\n      <a href='#'>Forget Password   </a>\r\n        {/* <button type=\"submit\" className=\"btn btn-primary submit-btn\">Forgat Password</button> */}\r\n      </div>\r\n      <div className=\"col-12\">\r\n        \r\n        <button type=\"submit\"    className=\"btn btn-primary submit-btn\">Submit</button>\r\n      </div>\r\n      <hr></hr>\r\n\r\n      <div className=\"col-12\">\r\n        \r\n        <button type=\"submit\" className=\"btn btn-primary submit-btn\"> Sing In With Google </button>\r\n      </div>\r\n    </div>\r\n\r\n    {output && (\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-12\">\r\n            <a href='#'></a>\r\n          <div className=\"output-message\">{output}</div>\r\n        </div>\r\n      </div>\r\n    )}\r\n      </form>\r\n    </div>\r\n\r\n\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default LoginForm;\r\n\r\n\r\n// import './login.css';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import {\r\n//   MDBContainer,\r\n//   MDBCol,\r\n//   MDBRow,\r\n//   MDBBtn,\r\n//   MDBIcon,\r\n//   MDBInput,\r\n//   MDBCheckbox\r\n// } from 'mdb-react-ui-kit';\r\n\r\n// const LoginForm = () => {\r\n//   const [formData, setFormData] = useState({ email: '', password: '' });\r\n//   const [errors, setErrors] = useState({});\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   // Handle input change\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   // Validate form fields\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n//     if (!formData.email) {\r\n//       newErrors.email = 'Email is required';\r\n//     } else if (!emailRegex.test(formData.email)) {\r\n//       newErrors.email = 'Invalid email format';\r\n//     }\r\n\r\n//     if (!formData.password) {\r\n//       newErrors.password = 'Password is required';\r\n//     }\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const validationErrors = validateForm();\r\n//     if (Object.keys(validationErrors).length > 0) {\r\n//       setErrors(validationErrors);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n//       setOutput('Login successful!');\r\n//       setFormData({\r\n//         email: '',\r\n//         password: ''\r\n//       });\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       setOutput('Login failed!');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//      <MDBContainer fluid className=\"p-3 my-5\">\r\n//       <MDBRow>\r\n//         <MDBCol col='10' md='6'>\r\n//           <img\r\n//             src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\"\r\n//             className=\"img-fluid\"\r\n//             alt=\"Phone\"\r\n//           />\r\n//         </MDBCol>\r\n\r\n//         <MDBCol col='4' md='6'>\r\n//           <form onSubmit={handleSubmit} className=\"form-container-inline\">\r\n//             <h2 className=\"form-heading\">Login</h2>\r\n\r\n//             {/* Email Field */}\r\n//             <div className=\"form-group-inline\">\r\n//               <label htmlFor=\"email\" className=\"form-label-inline\">Email:</label>\r\n//               <MDBInput\r\n//                 wrapperClass='mb-4'\r\n//                 id='formControlLg'\r\n//                 type='email'\r\n//                 size=\"lg\"\r\n//                 name=\"email\"\r\n//                 value={formData.email}\r\n//                 onChange={handleChange}\r\n//                 className={errors.email ? 'is-invalid' : ''}\r\n//               />\r\n//             </div>\r\n//             {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n//             {/* Password Field */}\r\n//             <div className=\"form-group-inline\">\r\n//               <label htmlFor=\"password\" className=\"form-label-inline\">Password:</label>\r\n//               <MDBInput\r\n//                 wrapperClass='mb-4'\r\n//                 id='formControlLg'\r\n//                 type='password'\r\n//                 size=\"lg\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={handleChange}\r\n//                 className={errors.password ? 'is-invalid' : ''}\r\n//               />\r\n//             </div>\r\n//             {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n//             <div className=\"d-flex justify-content-between mx-4 mb-4\">\r\n//               <MDBCheckbox name='flexCheck' value='' id='flexCheckDefault' label='Remember me' />\r\n//               <a href=\"#!\">Forgot password?</a>\r\n//             </div>\r\n\r\n//             <MDBBtn type=\"submit\" className=\"mb-4 w-100\" size=\"lg\">Sign in</MDBBtn>\r\n\r\n//             <div className=\"divider d-flex align-items-center my-4\">\r\n//               <p className=\"text-center fw-bold mx-3 mb-0\">OR</p>\r\n//             </div>\r\n\r\n//             {/* Social Buttons */}\r\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#3b5998' }}>\r\n//               <MDBIcon fab icon=\"facebook-f\" className=\"mx-2\" />\r\n//               Continue with Facebook\r\n//             </MDBBtn>\r\n\r\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#55acee' }}>\r\n//               <MDBIcon fab icon=\"twitter\" className=\"mx-2\" />\r\n//               Continue with Twitter\r\n//             </MDBBtn>\r\n\r\n//             {/* Output Message */}\r\n//             {output && (\r\n//               <div className=\"output-message\">{output}</div>\r\n//             )}\r\n//           </form>\r\n//         </MDBCol>\r\n//       </MDBRow>\r\n//     </MDBContainer>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}