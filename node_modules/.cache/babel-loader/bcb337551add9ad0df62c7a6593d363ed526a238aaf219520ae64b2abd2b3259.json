{"ast":null,"code":"// import './login.css';\n// import React from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//   // Validation schema using Yup\n//   const validationSchema = Yup.object({\n//     email: Yup.string()\n//       .email('Invalid email format')\n//       .required('Email is required'),\n//     password: Yup.string()\n//       .required('Password is required')\n//   });\n\n//   // Form submission handler\n//   const handleSubmit = async (values, { setSubmitting, resetForm, setStatus }) => {\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/auth/login', values);\n//       setStatus({ success: 'Login successful!' });\n//       resetForm(); // Reset form after successful submission\n//       console.log(response.data);\n//     } catch (error) {\n//       setStatus({ error: 'Login failed!' });\n//     } finally {\n//       setSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//     <div className=\"row main_div container mt-5\">\n//       <div className=\"d-flex align-items-center\">\n//         {/* Left Column for Image */}\n//         <div className=\"col-md-7 col-lg-7 col-sm-5 col-12\">\n//           <img\n//             src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\n//             className=\"img-fluid\"\n//             alt=\"Login Illustration\"\n//           />\n//         </div>\n\n//         {/* Right Column for Form */}\n//         <div className=\"col-md-5 col-lg-5 col-sm-5 col-12\">\n//           <div className=\"form-container\" id='form_cont'>\n//             <Formik\n//               initialValues={{ email: '', password: '' }}\n//               validationSchema={validationSchema}\n//               onSubmit={handleSubmit}\n\n//             >\n\n//               {({ isSubmitting, status }) => (\n//                 <Form className=\"form-card\">\n//                   <div>\n//                   <h2 className=\"form-heading\">Welcome to</h2>\n//                   <h3 className=\"form-heading1\">Login</h3>\n//                   </div>\n\n//                   {/* Email Field */}\n\n//                   <div className=\"form-group\">\n//                     <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n//                     <Field\n//                       type=\"email\"\n//                       name=\"email\"\n//                       className=\"form-control\"\n//                       placeholder=\"Enter your email\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"ErrorMessage\" />\n\n//                   {/* Password Field */}\n//                   <div className=\"form-group\">\n//                     <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n//                     <Field\n//                       type=\"password\"\n//                       name=\"password\"\n//                       className=\"form-control\"\n//                       placeholder=\"Enter your password\"\n//                     />\n//                   </div>\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"ErrorMessage1\" />\n\n//                   {/* Forgot Password Link */}\n//                   <div className=\"row\">\n//                     <div className=\"col-12\">\n//                       <a className='forgot' href='#'>Forgot Password?</a>\n//                     </div>\n\n//                     {/* Submit Button */}\n//                     <div className=\"col-12\">\n//                       <button type=\"submit\" className=\"btn btn-primary submit-btn \" disabled={isSubmitting}>\n//                         {isSubmitting ? 'Submitting...' : 'Login'}\n//                       </button>\n//                     </div>\n\n//                     {/* Output message */}\n//                     {status && (\n//                     <div className=\"row mt-3\">\n//                       <div className=\"col-12\">\n//                         {status.success && <div className=\"output-message\">{status.success}</div>}\n//                         {status.error && <div className=\"output-message\">{status.error}</div>}\n//                       </div>\n//                     </div>\n//                   )}\n\n//                    <div className=\"divider-container my-3\">\n//                       <div className=\"divider-line\"></div>\n//                       <span className=\"divider-text\">or</span>\n//                       <div className=\"divider-line\"></div>\n//                     </div>\n\n//                     {/* Google Sign-In Button */}\n//                     <div className=\"col-12\">\n//                       <button type=\"button\" className=\"fButoon mt-3\">\n//                       <span className=\"google-icon me-2\">\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"20\" height=\"20\">\n//         <path fill=\"#0D47A1\" d=\"M24 9.5c1.87 0 3.57.64 4.91 1.7l3.65-3.65C29.77 5.67 27.02 4.5 24 4.5c-5.42 0-10 3.12-12.26 7.67l4.82 3.74C17.97 12.11 20.77 9.5 24 9.5z\"/>\n//         <path fill=\"#0F9D58\" d=\"M24 38.5c3.32 0 6.1-1.1 8.13-3l-4.13-3.2c-1.12.77-2.54 1.23-4 1.23-3.07 0-5.67-2.07-6.6-4.88l-4.84 3.73C15.83 35.65 19.62 38.5 24 38.5z\"/>\n//         <path fill=\"#F4B400\" d=\"M41.84 24.5c0-1.03-.09-2.03-.26-3h-17.6v6h10.13c-.43 2.19-1.66 4.03-3.4 5.3l4.13 3.2c2.44-2.25 3.99-5.56 3.99-9.5z\"/>\n//         <path fill=\"#C5221F\" d=\"M17.4 28.65c-.3-.88-.48-1.82-.48-2.65 0-.93.17-1.83.46-2.65l-4.82-3.74c-.91 1.66-1.44 3.55-1.44 5.65 0 2.09.52 4 1.44 5.65l4.84-3.73z\"/>\n//       </svg>\n//     </span>\n//             Sign In With Google</button>\n//                     </div>\n//                   </div>\n\n//                 </Form>\n//               )}\n//             </Formik>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;","map":{"version":3,"names":[],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["// import './login.css';\r\n// import React from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//   // Validation schema using Yup\r\n//   const validationSchema = Yup.object({\r\n//     email: Yup.string()\r\n//       .email('Invalid email format')\r\n//       .required('Email is required'),\r\n//     password: Yup.string()\r\n//       .required('Password is required')\r\n//   });\r\n\r\n//   // Form submission handler\r\n//   const handleSubmit = async (values, { setSubmitting, resetForm, setStatus }) => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/api/auth/login', values);\r\n//       setStatus({ success: 'Login successful!' });\r\n//       resetForm(); // Reset form after successful submission\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       setStatus({ error: 'Login failed!' });\r\n//     } finally {\r\n//       setSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//     <div className=\"row main_div container mt-5\">\r\n//       <div className=\"d-flex align-items-center\">\r\n//         {/* Left Column for Image */}\r\n//         <div className=\"col-md-7 col-lg-7 col-sm-5 col-12\">\r\n//           <img\r\n//             src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\r\n//             className=\"img-fluid\"\r\n//             alt=\"Login Illustration\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right Column for Form */}\r\n//         <div className=\"col-md-5 col-lg-5 col-sm-5 col-12\">\r\n//           <div className=\"form-container\" id='form_cont'>\r\n//             <Formik\r\n//               initialValues={{ email: '', password: '' }}\r\n//               validationSchema={validationSchema}\r\n//               onSubmit={handleSubmit}\r\n              \r\n//             >\r\n            \r\n//               {({ isSubmitting, status }) => (\r\n//                 <Form className=\"form-card\">\r\n//                   <div>\r\n//                   <h2 className=\"form-heading\">Welcome to</h2>\r\n//                   <h3 className=\"form-heading1\">Login</h3>\r\n//                   </div>\r\n                  \r\n\r\n//                   {/* Email Field */}\r\n                \r\n//                   <div className=\"form-group\">\r\n//                     <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n//                     <Field\r\n//                       type=\"email\"\r\n//                       name=\"email\"\r\n//                       className=\"form-control\"\r\n//                       placeholder=\"Enter your email\"\r\n//                     />\r\n//                   </div>\r\n//                   <ErrorMessage name=\"email\" component=\"div\" className=\"ErrorMessage\" />\r\n\r\n//                   {/* Password Field */}\r\n//                   <div className=\"form-group\">\r\n//                     <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n//                     <Field\r\n//                       type=\"password\"\r\n//                       name=\"password\"\r\n//                       className=\"form-control\"\r\n//                       placeholder=\"Enter your password\"\r\n//                     />\r\n//                   </div>\r\n//                   <ErrorMessage name=\"password\" component=\"div\" className=\"ErrorMessage1\" />\r\n\r\n//                   {/* Forgot Password Link */}\r\n//                   <div className=\"row\">\r\n//                     <div className=\"col-12\">\r\n//                       <a className='forgot' href='#'>Forgot Password?</a>\r\n//                     </div>\r\n\r\n//                     {/* Submit Button */}\r\n//                     <div className=\"col-12\">\r\n//                       <button type=\"submit\" className=\"btn btn-primary submit-btn \" disabled={isSubmitting}>\r\n//                         {isSubmitting ? 'Submitting...' : 'Login'}\r\n//                       </button>\r\n//                     </div>\r\n\r\n//                     {/* Output message */}\r\n//                     {status && (\r\n//                     <div className=\"row mt-3\">\r\n//                       <div className=\"col-12\">\r\n//                         {status.success && <div className=\"output-message\">{status.success}</div>}\r\n//                         {status.error && <div className=\"output-message\">{status.error}</div>}\r\n//                       </div>\r\n//                     </div>\r\n//                   )}\r\n                   \r\n//                    <div className=\"divider-container my-3\">\r\n//                       <div className=\"divider-line\"></div>\r\n//                       <span className=\"divider-text\">or</span>\r\n//                       <div className=\"divider-line\"></div>\r\n//                     </div>\r\n\r\n//                     {/* Google Sign-In Button */}\r\n//                     <div className=\"col-12\">\r\n//                       <button type=\"button\" className=\"fButoon mt-3\">\r\n//                       <span className=\"google-icon me-2\">\r\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"20\" height=\"20\">\r\n//         <path fill=\"#0D47A1\" d=\"M24 9.5c1.87 0 3.57.64 4.91 1.7l3.65-3.65C29.77 5.67 27.02 4.5 24 4.5c-5.42 0-10 3.12-12.26 7.67l4.82 3.74C17.97 12.11 20.77 9.5 24 9.5z\"/>\r\n//         <path fill=\"#0F9D58\" d=\"M24 38.5c3.32 0 6.1-1.1 8.13-3l-4.13-3.2c-1.12.77-2.54 1.23-4 1.23-3.07 0-5.67-2.07-6.6-4.88l-4.84 3.73C15.83 35.65 19.62 38.5 24 38.5z\"/>\r\n//         <path fill=\"#F4B400\" d=\"M41.84 24.5c0-1.03-.09-2.03-.26-3h-17.6v6h10.13c-.43 2.19-1.66 4.03-3.4 5.3l4.13 3.2c2.44-2.25 3.99-5.56 3.99-9.5z\"/>\r\n//         <path fill=\"#C5221F\" d=\"M17.4 28.65c-.3-.88-.48-1.82-.48-2.65 0-.93.17-1.83.46-2.65l-4.82-3.74c-.91 1.66-1.44 3.55-1.44 5.65 0 2.09.52 4 1.44 5.65l4.84-3.73z\"/>\r\n//       </svg>\r\n//     </span>\r\n//             Sign In With Google</button>\r\n//                     </div>\r\n//                   </div>\r\n\r\n                  \r\n//                 </Form>\r\n//               )}\r\n//             </Formik>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}