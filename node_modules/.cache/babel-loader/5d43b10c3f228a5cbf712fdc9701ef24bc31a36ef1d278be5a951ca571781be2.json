{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\UserComponent\\\\user.js\",\n  _s = $RefreshSig$();\nimport './user.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    age: '',\n    gender: '',\n    profession: ''\n  });\n  const [output, setOutput] = useState('');\n  const [errors, setErrors] = useState({});\n  const [dropdownData, setDropdownData] = useState({\n    age: [],\n    gender: [],\n    profession: []\n  });\n  useEffect(() => {\n    // Fetch dropdown data from backend\n    axios.get('http://localhost:5000/api/users/dummy-data').then(response => {\n      setDropdownData(response.data);\n    }).catch(error => {\n      console.error('Error fetching dropdown data:', error);\n    });\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Validate alphabetic characters for name fields\n    if ((name === 'firstName' || name === 'lastName') && !/^[A-Za-z]*$/.test(value)) {\n      return; // Don't update state if value is invalid\n    }\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.firstName) newErrors.firstName = 'First name is required.';\n    if (!formData.lastName) newErrors.lastName = 'Last name is required.';\n    if (!formData.gender) newErrors.gender = 'Gender is required.';\n    if (!formData.profession) newErrors.profession = 'Profession is required.';\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n    } else {\n      setErrors({});\n      const userData = {\n        firstName,\n        lastName,\n        age,\n        gender,\n        profession\n      };\n      axios.post('http://localhost:5000/api/users', userData).then(response => {\n        setOutput('User created successfully!');\n        setFirstName(\"\");\n        setLastName(\"\");\n        setAge(\"\");\n        setGender(\"\");\n        setProfession(\"\");\n      }).catch(() => {\n        setOutput(\"User failed...\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"form-heading\",\n          children: \"User Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            className: \"form-label\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.firstName ? 'is-invalid' : ''}`,\n            id: \"firstName\",\n            value: formData.firstName,\n            onChange: e => setFirstName(e.target.value),\n            required: true,\n            placeholder: \"Enter your first name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            className: \"form-label\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.lastName ? 'is-invalid' : ''}`,\n            id: \"lastName\",\n            value: formData.lastName,\n            onChange: e => setLastName(e.target.value),\n            required: true,\n            placeholder: \"Enter your last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            className: \"form-label\",\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            id: \"age\",\n            value: formData.age,\n            onChange: e => setAge(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), dropdownData.age.map((ageOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ageOption,\n              children: ageOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), errors.age && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gender\",\n            className: \"form-label\",\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-select ${errors.gender ? 'is-invalid' : ''}`,\n            id: \"gender\",\n            value: formData.gender,\n            onChange: e => setGender(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), dropdownData.gender.map((genderOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: genderOption,\n              children: genderOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), errors.gender && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profession\",\n            className: \"form-label\",\n            children: \"Profession:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-select ${errors.profession ? 'is-invalid' : ''}`,\n            id: \"profession\",\n            value: formData.profession,\n            onChange: e => setProfession(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Profession\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), dropdownData.profession.map((professionOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: professionOption,\n              children: professionOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), errors.profession && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary submit-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-message\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"KPWsHmFDuuRF2LaIdcQELtQJoRg=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","_s","formData","setFormData","firstName","lastName","age","gender","profession","output","setOutput","errors","setErrors","dropdownData","setDropdownData","get","then","response","data","catch","error","console","handleChange","e","name","value","target","test","prevData","validateForm","newErrors","handleSubmit","preventDefault","validationErrors","Object","keys","length","userData","post","setFirstName","setLastName","setAge","setGender","setProfession","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","placeholder","map","ageOption","index","genderOption","professionOption","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/UserComponent/user.js"],"sourcesContent":["import './user.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        age: '',\r\n        gender: '',\r\n        profession: '',\r\n      });\r\n    const [output, setOutput] = useState('');\r\n    const [errors, setErrors] = useState({}); \r\n    const [dropdownData, setDropdownData] = useState({\r\n        age: [],\r\n        gender: [],\r\n        profession: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch dropdown data from backend\r\n        axios.get('http://localhost:5000/api/users/dummy-data')\r\n            .then((response) => {\r\n                setDropdownData(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching dropdown data:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        // Validate alphabetic characters for name fields\r\n        if ((name === 'firstName' || name === 'lastName') && !/^[A-Za-z]*$/.test(value)) {\r\n          return; // Don't update state if value is invalid\r\n        }\r\n    \r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          [name]: value,\r\n        }));\r\n      };\r\n\r\n      const validateForm = () => { \r\n\r\n        const newErrors = {}; \r\n        \r\n        if (!formData.firstName) \r\n        newErrors.firstName = 'First name is required.'; \r\n        if (!formData.lastName) \r\n        newErrors.lastName = 'Last name is required.';\r\n         if (!formData.gender)\r\n          newErrors.gender = 'Gender is required.'; \r\n         if (!formData.profession)\r\n          newErrors.profession = 'Profession is required.';\r\n          return newErrors; \r\n        }; \r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const validationErrors = validateForm(); \r\n        \r\n        if (Object.keys(validationErrors).length > 0) { \r\n            setErrors(validationErrors); } \r\n       \r\n            else { setErrors({});\r\n\r\n\r\n    const userData = { firstName, lastName, age, gender, profession };\r\n\r\n    axios.post('http://localhost:5000/api/users', userData)\r\n            .then((response) => {\r\n                setOutput('User created successfully!');\r\n                setFirstName(\"\");\r\n                setLastName(\"\");\r\n                setAge(\"\");\r\n                setGender(\"\");\r\n                setProfession(\"\");\r\n            })\r\n            .catch(() => {\r\n                setOutput(\"User failed...\");\r\n            });\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit} className=\"form-card\">\r\n            <div className=\"row\">\r\n                <h1 className=\"form-heading\">User Form</h1>\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label\">First Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\r\n                        id=\"firstName\"\r\n                        value={formData.firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        required\r\n                        placeholder=\"Enter your first name\"/>\r\n                         {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName}</div>}\r\n                </div>\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"lastName\" className=\"form-label\">Last Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${errors.lastName ? 'is-invalid' : ''}`}\r\n                        id=\"lastName\"\r\n                        value={formData.lastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        required\r\n                        placeholder=\"Enter your last name\"/>\r\n                       {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"age\" className=\"form-label\">Age:</label>\r\n                    <select\r\n                        className=\"form-select\"\r\n                        id=\"age\"\r\n                        value={formData.age}\r\n                        onChange={(e) => setAge(e.target.value)}>\r\n                        <option value=\"\">Select Age</option>\r\n                        {dropdownData.age.map((ageOption, index) => (\r\n                            <option key={index} value={ageOption}>{ageOption}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.age && <div className=\"invalid-feedback\">{errors.age}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8\">\r\n                    <label htmlFor=\"gender\" className=\"form-label\">Gender:</label>\r\n                    <select\r\n                        className={`form-select ${errors.gender ? 'is-invalid' : ''}`}\r\n                        id=\"gender\"\r\n                        value={formData.gender}\r\n                        onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"\">Select Gender</option>\r\n                        {dropdownData.gender.map((genderOption, index) => (\r\n                            <option key={index} value={genderOption}>{genderOption}</option>\r\n                        ))}\r\n                    </select>\r\n                   {errors.gender && <div className=\"invalid-feedback\">{errors.gender}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"profession\" className=\"form-label\">Profession:</label>\r\n                    <select\r\n                        className={`form-select ${errors.profession ? 'is-invalid' : ''}`}\r\n                        id=\"profession\"\r\n                        value={formData.profession}\r\n                        onChange={(e) => setProfession(e.target.value)}\r\n                    >\r\n                        <option value=\"\">Select Profession</option>\r\n                        {dropdownData.profession.map((professionOption, index) => (\r\n                            <option key={index} value={professionOption}>{professionOption}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.profession && <div className=\"invalid-feedback\">{errors.profession}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n                </div>\r\n            </div>\r\n            {output && (\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col-12\">\r\n             <div className=\"output-message\">\r\n               {output}\r\n              </div>\r\n            </div>\r\n                </div>\r\n                )}\r\n        </form>\r\n        \r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}