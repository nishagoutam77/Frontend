{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\LoginComponent\\\\login.js\",\n  _s = $RefreshSig$();\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [output, setOutput] = useState('');\n\n  // Handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validate form fields\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    return newErrors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n      setOutput('Login successful!');\n      console.log(response.data);\n    } catch (error) {\n      setOutput('Login failed!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ErrorMessage\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error\",\n        className: \"ErrorMessage\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary submit-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-message\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"i4+DR9BXyEHMvkyA5OlY22NUjeA=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//   const [loginError, setLoginError] = useState('');\n\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: '',\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string()\n//         .email('Invalid email address')\n//         .required('Email is required'),\n//       password: Yup.string()\n//         .min(6, 'Password must be at least 6 characters long')\n//         .required('Password is required'),\n//     }),\n//     onSubmit: async (values) => {\n//       try {\n//         const response = await axios.post('http://localhost:5000/api/login', values);\n//         alert('Login successful');\n//         // Handle success (store token, redirect, etc.)\n//       } catch (error) {\n//         setLoginError('Invalid email or password');\n//       }\n//     },\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\n//         <h1 className=\"form-heading\">Login</h1>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         {formik.errors.email && formik.touched.email ? (\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\n//           ) : null}\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.password}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         {formik.errors.password && formik.touched.password ? (\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\n//           ) : null}\n\n//      <div className=\"row\">\n//       <div className=\"col-12\">\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\n//       </div>\n//     </div>\n\n//     {loginError && (\n//       <div className=\"row mt-3\">\n//         <div className=\"col-12\">\n//           <div className=\"output-message\">{loginError}</div>\n//         </div>\n//       </div>\n//     )}\n\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","email","password","errors","setErrors","output","setOutput","handleChange","e","name","value","target","validateForm","newErrors","emailRegex","test","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","post","console","log","data","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["import './login.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    const [formData, setFormData] = useState({ email: '', password: '' });\r\n    const [errors, setErrors] = useState({});\r\n    const [output, setOutput] = useState('');\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n  // Validate form fields\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validateForm();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n            setOutput('Login successful!');\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            setOutput('Login failed!');\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit} className=\"form-card\">\r\n        <h2 className=\"form-heading\">Login</h2>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n        {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n        <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n      </div>\r\n    </div>\r\n\r\n    {output && (\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-12\">\r\n          <div className=\"output-message\">{output}</div>\r\n        </div>\r\n      </div>\r\n    )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useFormik } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//   const [loginError, setLoginError] = useState('');\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       email: '',\r\n//       password: '',\r\n//     },\r\n//     validationSchema: Yup.object({\r\n//       email: Yup.string()\r\n//         .email('Invalid email address')\r\n//         .required('Email is required'),\r\n//       password: Yup.string()\r\n//         .min(6, 'Password must be at least 6 characters long')\r\n//         .required('Password is required'),\r\n//     }),\r\n//     onSubmit: async (values) => {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:5000/api/login', values);\r\n//         alert('Login successful');\r\n//         // Handle success (store token, redirect, etc.)\r\n//       } catch (error) {\r\n//         setLoginError('Invalid email or password');\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\r\n//         <h1 className=\"form-heading\">Login</h1>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.email}\r\n//             placeholder=\"Enter your email\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.email && formik.touched.email ? (\r\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\r\n//           ) : null}\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.password}\r\n//             placeholder=\"Enter your password\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.password && formik.touched.password ? (\r\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\r\n//           ) : null}\r\n\r\n\r\n//      <div className=\"row\">\r\n//       <div className=\"col-12\">\r\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n//       </div>\r\n//     </div>\r\n\r\n//     {loginError && (\r\n//       <div className=\"row mt-3\">\r\n//         <div className=\"col-12\">\r\n//           <div className=\"output-message\">{loginError}</div>\r\n//         </div>\r\n//       </div>\r\n//     )}\r\n\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n"],"mappings":"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AAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpC,EAAA,CAhGID,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAkGf,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}