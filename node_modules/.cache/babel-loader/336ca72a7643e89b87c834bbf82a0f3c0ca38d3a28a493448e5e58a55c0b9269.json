{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\UserComponent\\\\user.js\",\n  _s = $RefreshSig$();\nimport './user.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [age, setAge] = useState('');\n  const [gender, setGender] = useState('');\n  const [profession, setProfession] = useState('');\n  const [output, setOutput] = useState('');\n  const [errors, setErrors] = useState({});\n  const [dropdownData, setDropdownData] = useState({\n    age: [],\n    gender: [],\n    profession: []\n  });\n  useEffect(() => {\n    // Fetch dropdown data from backend\n    axios.get('http://localhost:5000/api/users/dummy-data').then(response => {\n      setDropdownData(response.data);\n    }).catch(error => {\n      console.error('Error fetching dropdown data:', error);\n    });\n  }, []);\n  const validateForm = () => {\n    const newErrors = {};\n    const nameRegex = /^[A-Za-z]+$/; // Regex for only letters\n\n    if (!firstName) {\n      newErrors.firstName = 'First name is required';\n    } else if (!nameRegex.test(firstName)) {\n      newErrors.firstName = 'First name can only contain letters';\n    }\n    if (!lastName) {\n      newErrors.lastName = 'Last name is required';\n    } else if (!nameRegex.test(lastName)) {\n      newErrors.lastName = 'Last name can only contain letters';\n    }\n    if (!age) {\n      newErrors.age = 'Please select your age';\n    }\n    if (!gender) {\n      newErrors.gender = 'Please select your gender';\n    }\n    if (!profession) {\n      newErrors.profession = 'Please select your profession';\n    }\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    setErrors(validationErrors);\n\n    // If there are no validation errors, submit the form\n    if (Object.keys(validationErrors).length === 0) {\n      const userData = {\n        firstName,\n        lastName,\n        age,\n        gender,\n        profession\n      };\n      axios.post('http://localhost:5000/api/users', userData).then(response => {\n        setOutput('User created successfully!');\n        setFirstName(\"\");\n        setLastName(\"\");\n        setAge(\"\");\n        setGender(\"\");\n        setProfession(\"\");\n      }).catch(() => {\n        setOutput(\"User failed...\");\n      });\n    } else {\n      setOutput(''); // Clear output if validation fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"form-heading\",\n          children: \"User Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            className: \"form-label\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.firstName ? 'is-invalid' : ''}`,\n            id: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            required: true,\n            placeholder: \"Enter your first name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            className: \"form-label\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.lastName ? 'is-invalid' : ''}`,\n            id: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            required: true,\n            placeholder: \"Enter your last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            className: \"form-label\",\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            id: \"age\",\n            value: age,\n            onChange: e => setAge(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), dropdownData.age.map((ageOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ageOption,\n              children: ageOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), errors.age && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gender\",\n            className: \"form-label\",\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-select ${errors.gender ? 'is-invalid' : ''}`,\n            id: \"gender\",\n            value: gender,\n            onChange: e => setGender(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), dropdownData.gender.map((genderOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: genderOption,\n              children: genderOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), errors.gender && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-12 col-sm-12 col-md-6 col-lg-8 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profession\",\n            className: \"form-label\",\n            children: \"Profession:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-select ${errors.profession ? 'is-invalid' : ''}`,\n            id: \"profession\",\n            value: profession,\n            onChange: e => setProfession(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Profession\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), dropdownData.profession.map((professionOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: professionOption,\n              children: professionOption\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), errors.profession && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary submit-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-message\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"gbb9LnR1A2tPOfSgl80r8xf9PuE=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","_s","firstName","setFirstName","lastName","setLastName","age","setAge","gender","setGender","profession","setProfession","output","setOutput","errors","setErrors","dropdownData","setDropdownData","get","then","response","data","catch","error","console","validateForm","newErrors","nameRegex","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","userData","post","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","placeholder","map","ageOption","index","genderOption","professionOption","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/UserComponent/user.js"],"sourcesContent":["import './user.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserForm = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [profession, setProfession] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [errors, setErrors] = useState({}); \r\n    const [dropdownData, setDropdownData] = useState({\r\n        age: [],\r\n        gender: [],\r\n        profession: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch dropdown data from backend\r\n        axios.get('http://localhost:5000/api/users/dummy-data')\r\n            .then((response) => {\r\n                setDropdownData(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching dropdown data:', error);\r\n            });\r\n    }, []);\r\n\r\n    \r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        const nameRegex = /^[A-Za-z]+$/; // Regex for only letters\r\n\r\n        if (!firstName) {\r\n            newErrors.firstName = 'First name is required';\r\n        } else if (!nameRegex.test(firstName)) {\r\n            newErrors.firstName = 'First name can only contain letters';\r\n        }\r\n\r\n        if (!lastName) {\r\n            newErrors.lastName = 'Last name is required';\r\n        } else if (!nameRegex.test(lastName)) {\r\n            newErrors.lastName = 'Last name can only contain letters';\r\n        }\r\n\r\n        if (!age) {\r\n            newErrors.age = 'Please select your age';\r\n        }\r\n\r\n        if (!gender) {\r\n            newErrors.gender = 'Please select your gender';\r\n        }\r\n\r\n        if (!profession) {\r\n            newErrors.profession = 'Please select your profession';\r\n        }\r\n\r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n        const validationErrors = validateForm();\r\n        setErrors(validationErrors);\r\n\r\n        // If there are no validation errors, submit the form\r\n        if (Object.keys(validationErrors).length === 0) {\r\n\r\n    const userData = { firstName, lastName, age, gender, profession };\r\n\r\n    axios.post('http://localhost:5000/api/users', userData)\r\n            .then((response) => {\r\n                setOutput('User created successfully!');\r\n                setFirstName(\"\");\r\n                setLastName(\"\");\r\n                setAge(\"\");\r\n                setGender(\"\");\r\n                setProfession(\"\");\r\n            })\r\n            .catch(() => {\r\n                setOutput(\"User failed...\");\r\n            });\r\n        }\r\n            else {\r\n                setOutput(''); // Clear output if validation fails\r\n            }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit} className=\"form-card\">\r\n            <div className=\"row\">\r\n                <h1 className=\"form-heading\">User Form</h1>\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label\">First Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\r\n                        id=\"firstName\"\r\n                        value={firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        required\r\n                        placeholder=\"Enter your first name\"/>\r\n                         {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName}</div>}\r\n                </div>\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"lastName\" className=\"form-label\">Last Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${errors.lastName ? 'is-invalid' : ''}`}\r\n                        id=\"lastName\"\r\n                        value={lastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        required\r\n                        placeholder=\"Enter your last name\"/>\r\n                       {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"age\" className=\"form-label\">Age:</label>\r\n                    <select\r\n                        className=\"form-select\"\r\n                        id=\"age\"\r\n                        value={age}\r\n                        onChange={(e) => setAge(e.target.value)}>\r\n                        <option value=\"\">Select Age</option>\r\n                        {dropdownData.age.map((ageOption, index) => (\r\n                            <option key={index} value={ageOption}>{ageOption}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.age && <div className=\"invalid-feedback\">{errors.age}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8\">\r\n                    <label htmlFor=\"gender\" className=\"form-label\">Gender:</label>\r\n                    <select\r\n                        className={`form-select ${errors.gender ? 'is-invalid' : ''}`}\r\n                        id=\"gender\"\r\n                        value={gender}\r\n                        onChange={(e) => setGender(e.target.value)}>\r\n                        <option value=\"\">Select Gender</option>\r\n                        {dropdownData.gender.map((genderOption, index) => (\r\n                            <option key={index} value={genderOption}>{genderOption}</option>\r\n                        ))}\r\n                    </select>\r\n                   {errors.gender && <div className=\"invalid-feedback\">{errors.gender}</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group col-12 col-sm-12 col-md-6 col-lg-8 \">\r\n                    <label htmlFor=\"profession\" className=\"form-label\">Profession:</label>\r\n                    <select\r\n                        className={`form-select ${errors.profession ? 'is-invalid' : ''}`}\r\n                        id=\"profession\"\r\n                        value={profession}\r\n                        onChange={(e) => setProfession(e.target.value)}\r\n                    >\r\n                        <option value=\"\">Select Profession</option>\r\n                        {dropdownData.profession.map((professionOption, index) => (\r\n                            <option key={index} value={professionOption}>{professionOption}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.profession && <div className=\"invalid-feedback\">{errors.profession}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n                </div>\r\n            </div>\r\n            {output && (\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col-12\">\r\n             <div className=\"output-message\">\r\n               {output}\r\n              </div>\r\n            </div>\r\n                </div>\r\n                )}\r\n        </form>\r\n        \r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}