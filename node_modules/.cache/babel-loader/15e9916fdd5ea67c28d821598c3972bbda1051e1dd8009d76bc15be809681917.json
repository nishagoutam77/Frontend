{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\LoginComponent\\\\login.js\",\n  _s = $RefreshSig$();\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loginError, setLoginError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validate = () => {\n    let formErrors = {};\n    if (!formData.email) formErrors.email = \"Email is required\";\n    if (!formData.password) formErrors.password = \"Password is required\";\n    return formErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors({});\n    setLoginError('');\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:5000/api/login', formData); // Adjust the URL if needed\n      console.log(\"Login successful:\", response.data);\n      // Handle successful login here, like storing the token in localStorage or redirecting\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error('Login error:', error.response ? error.response.data.message : error.message);\n      setLoginError(error.response ? error.response.data.message : \"Server error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-message error\",\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ErrorMessage\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"error\",\n        className: \"ErrorMessage\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        disabled: loading,\n        children: loading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"PAIyZI7pdPbT9UjV3+wqp9gRHg8=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//   const [loginError, setLoginError] = useState('');\n\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: '',\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string()\n//         .email('Invalid email address')\n//         .required('Email is required'),\n//       password: Yup.string()\n//         .min(6, 'Password must be at least 6 characters long')\n//         .required('Password is required'),\n//     }),\n//     onSubmit: async (values) => {\n//       try {\n//         const response = await axios.post('http://localhost:5000/api/login', values);\n//         alert('Login successful');\n//         // Handle success (store token, redirect, etc.)\n//       } catch (error) {\n//         setLoginError('Invalid email or password');\n//       }\n//     },\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\n//         <h1 className=\"form-heading\">Login</h1>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         {formik.errors.email && formik.touched.email ? (\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\n//           ) : null}\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.password}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         {formik.errors.password && formik.touched.password ? (\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\n//           ) : null}\n\n//      <div className=\"row\">\n//       <div className=\"col-12\">\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\n//       </div>\n//     </div>\n\n//     {loginError && (\n//       <div className=\"row mt-3\">\n//         <div className=\"col-12\">\n//           <div className=\"output-message\">{loginError}</div>\n//         </div>\n//       </div>\n//     )}\n\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","email","password","errors","setErrors","loginError","setLoginError","loading","setLoading","handleChange","e","name","value","target","validate","formErrors","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","post","console","log","data","error","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["import './login.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const [loginError, setLoginError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    let formErrors = {};\r\n    if (!formData.email) formErrors.email = \"Email is required\";\r\n    if (!formData.password) formErrors.password = \"Password is required\";\r\n    return formErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    setLoginError('');\r\n    \r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('http://localhost:5000/api/login', formData); // Adjust the URL if needed\r\n      console.log(\"Login successful:\", response.data);\r\n      // Handle successful login here, like storing the token in localStorage or redirecting\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error('Login error:', error.response ? error.response.data.message : error.message);\r\n      setLoginError(error.response ? error.response.data.message : \"Server error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit} className=\"form-card\">\r\n        <h2 className=\"form-heading\">Login</h2>\r\n        \r\n        {loginError && <div className=\"output-message error\">{loginError}</div>}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n        {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n        <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useFormik } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//   const [loginError, setLoginError] = useState('');\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       email: '',\r\n//       password: '',\r\n//     },\r\n//     validationSchema: Yup.object({\r\n//       email: Yup.string()\r\n//         .email('Invalid email address')\r\n//         .required('Email is required'),\r\n//       password: Yup.string()\r\n//         .min(6, 'Password must be at least 6 characters long')\r\n//         .required('Password is required'),\r\n//     }),\r\n//     onSubmit: async (values) => {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:5000/api/login', values);\r\n//         alert('Login successful');\r\n//         // Handle success (store token, redirect, etc.)\r\n//       } catch (error) {\r\n//         setLoginError('Invalid email or password');\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={formik.handleSubmit} className=\"form-card\">\r\n//         <h1 className=\"form-heading\">Login</h1>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             className={`form-control ${formik.errors.email && formik.touched.email ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.email}\r\n//             placeholder=\"Enter your email\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.email && formik.touched.email ? (\r\n//             <span className=\"ErrorMessage\">{formik.errors.email}</span>\r\n//           ) : null}\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             className={`form-control ${formik.errors.password && formik.touched.password ? 'is-invalid' : ''}`}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             value={formik.values.password}\r\n//             placeholder=\"Enter your password\"\r\n//           />\r\n//         </div>\r\n//         {formik.errors.password && formik.touched.password ? (\r\n//             <span id=\"error\" className=\"ErrorMessage\">{formik.errors.password}</span>\r\n//           ) : null}\r\n\r\n\r\n//      <div className=\"row\">\r\n//       <div className=\"col-12\">\r\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\">Submit</button>\r\n//       </div>\r\n//     </div>\r\n\r\n//     {loginError && (\r\n//       <div className=\"row mt-3\">\r\n//         <div className=\"col-12\">\r\n//           <div className=\"output-message\">{loginError}</div>\r\n//         </div>\r\n//       </div>\r\n//     )}\r\n\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n"],"mappings":"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;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrC,EAAA,CA1FID,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA4Ff,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}