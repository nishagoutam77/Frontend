{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamir\\\\OneDrive\\\\Desktop\\\\Office work\\\\DummyApp\\\\ui\\\\src\\\\Components\\\\LoginComponent\\\\login.js\",\n  _s = $RefreshSig$();\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [output, setOutput] = useState('');\n\n  // Handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validate form fields\n  const validateForm = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    return newErrors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n      setOutput('Login successful!');\n      setFormData({\n        email: '',\n        password: ''\n      });\n      console.log(response.data);\n    } catch (error) {\n      setOutput('Login failed!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_div container-fluid mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-12 d-none d-md-flex justify-content-center align-items-center bg-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://images.pexels.com/photos/3184287/pexels-photo-3184287.jpeg?auto=compress&cs=tinysrgb&w=600\",\n          className: \"img-fluid login-img\",\n          alt: \"Login Illustration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-5 col-md-6 col-sm-12 login-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container shadow p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"form-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"form-heading text-center mb-4\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"form-label\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n                id: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleChange,\n                placeholder: \"Enter your email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ErrorMessage\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"form-label\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n                id: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleChange,\n                placeholder: \"Enter your password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ErrorMessage\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group d-flex justify-content-between mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"forgot-password\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100 mb-3\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-primary w-100\",\n                children: \"Sign In With Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-center output-message\",\n              children: output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"i4+DR9BXyEHMvkyA5OlY22NUjeA=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import './login.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//   const [formData, setFormData] = useState({ email: '', password: '' });\n//   const [errors, setErrors] = useState({});\n//   const [output, setOutput] = useState('');\n\n//   // Handle input change\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Validate form fields\n//   const validateForm = () => {\n//     const newErrors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     if (!formData.email) {\n//       newErrors.email = 'Email is required';\n//     } else if (!emailRegex.test(formData.email)) {\n//       newErrors.email = 'Invalid email format';\n//     }\n\n//     if (!formData.password) {\n//       newErrors.password = 'Password is required';\n//     }\n\n//     return newErrors;\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n//       setOutput('Login successful!');\n//       setFormData({\n//         email: '',\n//         password: ''\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       setOutput('Login failed!');\n//     }\n//   };\n\n//   return (\n//     <div className=\"main_div container mt-5\">\n//       <div className=\"row\">\n//         {/* Left Column for Image */}\n//         <div className=\"col-lg-6 col-md-6 col-sm-12 d-flex justify-content-center align-items-center\">\n//           <img\n//             src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\n//             className=\"img-fluid\"\n//             alt=\"Login Illustration\"\n//           />\n//         </div>\n\n//         {/* Right Column for Form */}\n//         <div className=\"col-lg-6 col-md-6 col-sm-12\">\n//           <div className=\"form-container\">\n//             <form onSubmit={handleSubmit} className=\"form-card\">\n//               <h2 className=\"form-heading\">Login</h2>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n//                 <input\n//                   type=\"email\"\n//                   className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n//                   id=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   placeholder=\"Enter your email\"\n//                 />\n//               </div>\n//               {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n//                 <input\n//                   type=\"password\"\n//                   className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n//                   id=\"password\"\n//                   name=\"password\"\n//                   value={formData.password}\n//                   onChange={handleChange}\n//                   placeholder=\"Enter your password\"\n//                 />\n//               </div>\n//               {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\n\n//               <div className=\"row\">\n//                 <div className=\"col-12\">\n//                   <a href='#'>Forgot Password?</a>\n//                 </div>\n//                 <div className=\"col-12\">\n//                   <button type=\"submit\" className=\"btn btn-primary submit-btn mt-3\">Submit</button>\n//                 </div>\n//                 <hr />\n\n//                 <div className=\"col-12\">\n//                   <button type=\"button\" className=\"btn btn-primary submit-btn mt-3\">Sign In With Google</button>\n//                 </div>\n//               </div>\n\n//               {output && (\n//                 <div className=\"row mt-3\">\n//                   <div className=\"col-12\">\n//                     <div className=\"output-message\">{output}</div>\n//                   </div>\n//                 </div>\n//               )}\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\n// import './login.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const LoginForm = () => {\n//     const [formData, setFormData] = useState({ email: '', password: '' });\n//     const [errors, setErrors] = useState({});\n//     const [output, setOutput] = useState('');\n\n//     // Handle input change\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//   // Validate form fields\n//   const validateForm = () => {\n//     const newErrors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n//     if (!formData.email) {\n//       newErrors.email = 'Email is required';\n//     } else if (!emailRegex.test(formData.email)) {\n//       newErrors.email = 'Invalid email format';\n//     }\n\n//     if (!formData.password) {\n//       newErrors.password = 'Password is required';\n//     }\n\n//     return newErrors;\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const validationErrors = validateForm();\n//         if (Object.keys(validationErrors).length > 0) {\n//             setErrors(validationErrors);\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n//             setOutput('Login successful!');\n//             setFormData({\n//                 email: '',\n//                 password: ''\n//               });\n//             console.log(response.data);\n//         } catch (error) {\n//             setOutput('Login failed!');\n//         }\n//     };\n\n//   return (\n//     <>  \n// <div className=\"main_div \" > \n\n// <div className=\"form-group col-12\"> \n\n// <img      src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\n//             className=\"img-fluid\"\n//             alt=\"Phone\"   /> \n\n// </div>\n\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit} className=\"form-card\">\n//         <h2 className=\"form-heading\">Login</h2>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n//           <input\n//             type=\"email\"\n//             className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n//             id=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n//           <input\n//             type=\"password\"\n//             className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n//             id=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\n\n//         <div className=\"row\">\n\n//         <div className=\"col-12\">\n//       <a href='#'>Forget Password   </a>\n//         {/* <button type=\"submit\" className=\"btn btn-primary submit-btn\">Forgat Password</button> */}\n//       </div>\n//       <div className=\"col-12\">\n\n//         <button type=\"submit\"    className=\"btn btn-primary submit-btn\">Submit</button>\n//       </div>\n//       <hr></hr>\n\n//       <div className=\"col-12\">\n\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\"> Sing In With Google </button>\n//       </div>\n//     </div>\n\n//     {output && (\n//       <div className=\"row mt-3\">\n//         <div className=\"col-12\">\n//             <a href='#'></a>\n//           <div className=\"output-message\">{output}</div>\n//         </div>\n//       </div>\n//     )}\n//       </form>\n//     </div>\n\n//     </div>\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n\n// import './login.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import {\n//   MDBContainer,\n//   MDBCol,\n//   MDBRow,\n//   MDBBtn,\n//   MDBIcon,\n//   MDBInput,\n//   MDBCheckbox\n// } from 'mdb-react-ui-kit';\n\n// const LoginForm = () => {\n//   const [formData, setFormData] = useState({ email: '', password: '' });\n//   const [errors, setErrors] = useState({});\n//   const [output, setOutput] = useState('');\n\n//   // Handle input change\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Validate form fields\n//   const validateForm = () => {\n//     const newErrors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\n\n//     if (!formData.email) {\n//       newErrors.email = 'Email is required';\n//     } else if (!emailRegex.test(formData.email)) {\n//       newErrors.email = 'Invalid email format';\n//     }\n\n//     if (!formData.password) {\n//       newErrors.password = 'Password is required';\n//     }\n\n//     return newErrors;\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\n//       setOutput('Login successful!');\n//       setFormData({\n//         email: '',\n//         password: ''\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       setOutput('Login failed!');\n//     }\n//   };\n\n//   return (\n//      <MDBContainer fluid className=\"p-3 my-5\">\n//       <MDBRow>\n//         <MDBCol col='10' md='6'>\n//           <img\n//             src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\"\n//             className=\"img-fluid\"\n//             alt=\"Phone\"\n//           />\n//         </MDBCol>\n\n//         <MDBCol col='4' md='6'>\n//           <form onSubmit={handleSubmit} className=\"form-container-inline\">\n//             <h2 className=\"form-heading\">Login</h2>\n\n//             {/* Email Field */}\n//             <div className=\"form-group-inline\">\n//               <label htmlFor=\"email\" className=\"form-label-inline\">Email:</label>\n//               <MDBInput\n//                 wrapperClass='mb-4'\n//                 id='formControlLg'\n//                 type='email'\n//                 size=\"lg\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 className={errors.email ? 'is-invalid' : ''}\n//               />\n//             </div>\n//             {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\n\n//             {/* Password Field */}\n//             <div className=\"form-group-inline\">\n//               <label htmlFor=\"password\" className=\"form-label-inline\">Password:</label>\n//               <MDBInput\n//                 wrapperClass='mb-4'\n//                 id='formControlLg'\n//                 type='password'\n//                 size=\"lg\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//                 className={errors.password ? 'is-invalid' : ''}\n//               />\n//             </div>\n//             {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\n\n//             <div className=\"d-flex justify-content-between mx-4 mb-4\">\n//               <MDBCheckbox name='flexCheck' value='' id='flexCheckDefault' label='Remember me' />\n//               <a href=\"#!\">Forgot password?</a>\n//             </div>\n\n//             <MDBBtn type=\"submit\" className=\"mb-4 w-100\" size=\"lg\">Sign in</MDBBtn>\n\n//             <div className=\"divider d-flex align-items-center my-4\">\n//               <p className=\"text-center fw-bold mx-3 mb-0\">OR</p>\n//             </div>\n\n//             {/* Social Buttons */}\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#3b5998' }}>\n//               <MDBIcon fab icon=\"facebook-f\" className=\"mx-2\" />\n//               Continue with Facebook\n//             </MDBBtn>\n\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#55acee' }}>\n//               <MDBIcon fab icon=\"twitter\" className=\"mx-2\" />\n//               Continue with Twitter\n//             </MDBBtn>\n\n//             {/* Output Message */}\n//             {output && (\n//               <div className=\"output-message\">{output}</div>\n//             )}\n//           </form>\n//         </MDBCol>\n//       </MDBRow>\n//     </MDBContainer>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","email","password","errors","setErrors","output","setOutput","handleChange","e","name","value","target","validateForm","newErrors","emailRegex","test","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","post","console","log","data","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","href","_c","$RefreshReg$"],"sources":["C:/Users/aamir/OneDrive/Desktop/Office work/DummyApp/ui/src/Components/LoginComponent/login.js"],"sourcesContent":["import './login.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [errors, setErrors] = useState({});\r\n  const [output, setOutput] = useState('');\r\n\r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Validate form fields\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n      setOutput('Login successful!');\r\n      setFormData({\r\n        email: '',\r\n        password: ''\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      setOutput('Login failed!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main_div container-fluid mt-5\">\r\n    <div className=\"row d-flex justify-content-center align-items-center\">\r\n      {/* Left Column for Image */}\r\n      <div className=\"col-lg-6 col-md-6 col-sm-12 d-none d-md-flex justify-content-center align-items-center bg-image\">\r\n        <img\r\n          src=\"https://images.pexels.com/photos/3184287/pexels-photo-3184287.jpeg?auto=compress&cs=tinysrgb&w=600\"\r\n          className=\"img-fluid login-img\"\r\n          alt=\"Login Illustration\"\r\n        />\r\n      </div>\r\n\r\n      {/* Right Column for Form */}\r\n      <div className=\"col-lg-5 col-md-6 col-sm-12 login-form\">\r\n        <div className=\"form-container shadow p-5\">\r\n          <form onSubmit={handleSubmit} className=\"form-card\">\r\n            <h2 className=\"form-heading text-center mb-4\">Login</h2>\r\n\r\n            <div className=\"form-group mb-4\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter your email\"\r\n              />\r\n              {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n            </div>\r\n\r\n            <div className=\"form-group mb-4\">\r\n              <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter your password\"\r\n              />\r\n              {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\r\n            </div>\r\n\r\n            <div className=\"form-group d-flex justify-content-between mb-4\">\r\n              <a href=\"#\" className=\"forgot-password\">Forgot Password?</a>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-primary w-100 mb-3\">Login</button>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <button type=\"button\" className=\"btn btn-outline-primary w-100\">\r\n                Sign In With Google\r\n              </button>\r\n            </div>\r\n\r\n            {output && (\r\n              <div className=\"mt-3 text-center output-message\">{output}</div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n// import './login.css';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//   const [formData, setFormData] = useState({ email: '', password: '' });\r\n//   const [errors, setErrors] = useState({});\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   // Handle input change\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   // Validate form fields\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n//     if (!formData.email) {\r\n//       newErrors.email = 'Email is required';\r\n//     } else if (!emailRegex.test(formData.email)) {\r\n//       newErrors.email = 'Invalid email format';\r\n//     }\r\n\r\n//     if (!formData.password) {\r\n//       newErrors.password = 'Password is required';\r\n//     }\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const validationErrors = validateForm();\r\n//     if (Object.keys(validationErrors).length > 0) {\r\n//       setErrors(validationErrors);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n//       setOutput('Login successful!');\r\n//       setFormData({\r\n//         email: '',\r\n//         password: ''\r\n//       });\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       setOutput('Login failed!');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"main_div container mt-5\">\r\n//       <div className=\"row\">\r\n//         {/* Left Column for Image */}\r\n//         <div className=\"col-lg-6 col-md-6 col-sm-12 d-flex justify-content-center align-items-center\">\r\n//           <img\r\n//             src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\r\n//             className=\"img-fluid\"\r\n//             alt=\"Login Illustration\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Right Column for Form */}\r\n//         <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n//           <div className=\"form-container\">\r\n//             <form onSubmit={handleSubmit} className=\"form-card\">\r\n//               <h2 className=\"form-heading\">Login</h2>\r\n\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n//                   id=\"email\"\r\n//                   name=\"email\"\r\n//                   value={formData.email}\r\n//                   onChange={handleChange}\r\n//                   placeholder=\"Enter your email\"\r\n//                 />\r\n//               </div>\r\n//               {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n//                   id=\"password\"\r\n//                   name=\"password\"\r\n//                   value={formData.password}\r\n//                   onChange={handleChange}\r\n//                   placeholder=\"Enter your password\"\r\n//                 />\r\n//               </div>\r\n//               {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n//               <div className=\"row\">\r\n//                 <div className=\"col-12\">\r\n//                   <a href='#'>Forgot Password?</a>\r\n//                 </div>\r\n//                 <div className=\"col-12\">\r\n//                   <button type=\"submit\" className=\"btn btn-primary submit-btn mt-3\">Submit</button>\r\n//                 </div>\r\n//                 <hr />\r\n\r\n//                 <div className=\"col-12\">\r\n//                   <button type=\"button\" className=\"btn btn-primary submit-btn mt-3\">Sign In With Google</button>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {output && (\r\n//                 <div className=\"row mt-3\">\r\n//                   <div className=\"col-12\">\r\n//                     <div className=\"output-message\">{output}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import './login.css';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const LoginForm = () => {\r\n//     const [formData, setFormData] = useState({ email: '', password: '' });\r\n//     const [errors, setErrors] = useState({});\r\n//     const [output, setOutput] = useState('');\r\n\r\n//     // Handle input change\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//   // Validate form fields\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n//     if (!formData.email) {\r\n//       newErrors.email = 'Email is required';\r\n//     } else if (!emailRegex.test(formData.email)) {\r\n//       newErrors.email = 'Invalid email format';\r\n//     }\r\n\r\n//     if (!formData.password) {\r\n//       newErrors.password = 'Password is required';\r\n//     }\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const validationErrors = validateForm();\r\n//         if (Object.keys(validationErrors).length > 0) {\r\n//             setErrors(validationErrors);\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n//             setOutput('Login successful!');\r\n//             setFormData({\r\n//                 email: '',\r\n//                 password: ''\r\n//               });\r\n//             console.log(response.data);\r\n//         } catch (error) {\r\n//             setOutput('Login failed!');\r\n//         }\r\n//     };\r\n\r\n//   return (\r\n//     <>  \r\n// <div className=\"main_div \" > \r\n\r\n// <div className=\"form-group col-12\"> \r\n\r\n// <img      src=\"http://knowledgemission.kerala.gov.in/img/official-login.jpg\"\r\n//             className=\"img-fluid\"\r\n//             alt=\"Phone\"   /> \r\n\r\n// </div>\r\n\r\n//     <div className=\"form-container\">\r\n//       <form onSubmit={handleSubmit} className=\"form-card\">\r\n//         <h2 className=\"form-heading\">Login</h2>\r\n        \r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your email\"\r\n//           />\r\n//         </div>\r\n//         {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your password\"\r\n//           />\r\n//         </div>\r\n//         {errors.password && <span id=\"error\" className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n//         <div className=\"row\">\r\n\r\n//         <div className=\"col-12\">\r\n//       <a href='#'>Forget Password   </a>\r\n//         {/* <button type=\"submit\" className=\"btn btn-primary submit-btn\">Forgat Password</button> */}\r\n//       </div>\r\n//       <div className=\"col-12\">\r\n        \r\n//         <button type=\"submit\"    className=\"btn btn-primary submit-btn\">Submit</button>\r\n//       </div>\r\n//       <hr></hr>\r\n\r\n//       <div className=\"col-12\">\r\n        \r\n//         <button type=\"submit\" className=\"btn btn-primary submit-btn\"> Sing In With Google </button>\r\n//       </div>\r\n//     </div>\r\n\r\n//     {output && (\r\n//       <div className=\"row mt-3\">\r\n//         <div className=\"col-12\">\r\n//             <a href='#'></a>\r\n//           <div className=\"output-message\">{output}</div>\r\n//         </div>\r\n//       </div>\r\n//     )}\r\n//       </form>\r\n//     </div>\r\n\r\n\r\n//     </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n// export default LoginForm;\r\n\r\n\r\n// import './login.css';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import {\r\n//   MDBContainer,\r\n//   MDBCol,\r\n//   MDBRow,\r\n//   MDBBtn,\r\n//   MDBIcon,\r\n//   MDBInput,\r\n//   MDBCheckbox\r\n// } from 'mdb-react-ui-kit';\r\n\r\n// const LoginForm = () => {\r\n//   const [formData, setFormData] = useState({ email: '', password: '' });\r\n//   const [errors, setErrors] = useState({});\r\n//   const [output, setOutput] = useState('');\r\n\r\n//   // Handle input change\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   // Validate form fields\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email format\r\n\r\n//     if (!formData.email) {\r\n//       newErrors.email = 'Email is required';\r\n//     } else if (!emailRegex.test(formData.email)) {\r\n//       newErrors.email = 'Invalid email format';\r\n//     }\r\n\r\n//     if (!formData.password) {\r\n//       newErrors.password = 'Password is required';\r\n//     }\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const validationErrors = validateForm();\r\n//     if (Object.keys(validationErrors).length > 0) {\r\n//       setErrors(validationErrors);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/api/auth/login', formData);\r\n//       setOutput('Login successful!');\r\n//       setFormData({\r\n//         email: '',\r\n//         password: ''\r\n//       });\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       setOutput('Login failed!');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//      <MDBContainer fluid className=\"p-3 my-5\">\r\n//       <MDBRow>\r\n//         <MDBCol col='10' md='6'>\r\n//           <img\r\n//             src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\"\r\n//             className=\"img-fluid\"\r\n//             alt=\"Phone\"\r\n//           />\r\n//         </MDBCol>\r\n\r\n//         <MDBCol col='4' md='6'>\r\n//           <form onSubmit={handleSubmit} className=\"form-container-inline\">\r\n//             <h2 className=\"form-heading\">Login</h2>\r\n\r\n//             {/* Email Field */}\r\n//             <div className=\"form-group-inline\">\r\n//               <label htmlFor=\"email\" className=\"form-label-inline\">Email:</label>\r\n//               <MDBInput\r\n//                 wrapperClass='mb-4'\r\n//                 id='formControlLg'\r\n//                 type='email'\r\n//                 size=\"lg\"\r\n//                 name=\"email\"\r\n//                 value={formData.email}\r\n//                 onChange={handleChange}\r\n//                 className={errors.email ? 'is-invalid' : ''}\r\n//               />\r\n//             </div>\r\n//             {errors.email && <span className=\"ErrorMessage\">{errors.email}</span>}\r\n\r\n//             {/* Password Field */}\r\n//             <div className=\"form-group-inline\">\r\n//               <label htmlFor=\"password\" className=\"form-label-inline\">Password:</label>\r\n//               <MDBInput\r\n//                 wrapperClass='mb-4'\r\n//                 id='formControlLg'\r\n//                 type='password'\r\n//                 size=\"lg\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={handleChange}\r\n//                 className={errors.password ? 'is-invalid' : ''}\r\n//               />\r\n//             </div>\r\n//             {errors.password && <span className=\"ErrorMessage\">{errors.password}</span>}\r\n\r\n//             <div className=\"d-flex justify-content-between mx-4 mb-4\">\r\n//               <MDBCheckbox name='flexCheck' value='' id='flexCheckDefault' label='Remember me' />\r\n//               <a href=\"#!\">Forgot password?</a>\r\n//             </div>\r\n\r\n//             <MDBBtn type=\"submit\" className=\"mb-4 w-100\" size=\"lg\">Sign in</MDBBtn>\r\n\r\n//             <div className=\"divider d-flex align-items-center my-4\">\r\n//               <p className=\"text-center fw-bold mx-3 mb-0\">OR</p>\r\n//             </div>\r\n\r\n//             {/* Social Buttons */}\r\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#3b5998' }}>\r\n//               <MDBIcon fab icon=\"facebook-f\" className=\"mx-2\" />\r\n//               Continue with Facebook\r\n//             </MDBBtn>\r\n\r\n//             <MDBBtn className=\"mb-4 w-100\" size=\"lg\" style={{ backgroundColor: '#55acee' }}>\r\n//               <MDBIcon fab icon=\"twitter\" className=\"mx-2\" />\r\n//               Continue with Twitter\r\n//             </MDBBtn>\r\n\r\n//             {/* Output Message */}\r\n//             {output && (\r\n//               <div className=\"output-message\">{output}</div>\r\n//             )}\r\n//           </form>\r\n//         </MDBCol>\r\n//       </MDBRow>\r\n//     </MDBContainer>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}